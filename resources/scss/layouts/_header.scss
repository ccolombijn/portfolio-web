@use 'sass:math';
@use '../mixins/backgrounds';
.header {
    @apply bg-slate-900 text-white h-screen;
    &__content {
        @apply text-center py-[10vh] sm:py-[15vh] align-middle font-thin;
        h2 + p {
            @apply p-4 font-thin relative z-10;
        }
        h2 {
            @apply p-4 text-3xl font-bold relative z-10;
        }
        h2, p {
            @apply text-center;
        }
        img {
            @apply relative z-10 h-[50vh] m-auto;
        }
        .btn {
            @apply text-[22px] relative z-10;
        }
    }
    &__container {
        @apply relative;
        //mask: linear-gradient(black, black, transparent);
    }
    &__title {
        
        @apply inline-block float-left relative z-50;
        
        span {
            @apply hidden;
        }
        a {
            @apply inline-block bg-contain bg-center h-[80px] w-[100px] bg-no-repeat;
            //@include backgrounds.background-image-webp('/resources/images/ccc_logo_wit', 'png');
        }
    }
    nav {
        @apply p-8 pl-36 relative z-40;
        a {
            @apply text-xl font-thin inline-block relative mb-4;
            &::after {
                @apply absolute w-full h-1 mt-2 bottom-[-3] left-0 bg-[#ffffff70];
                content: '';
                transform: scaleX(0);
                transition: transform 0.25s ease-out;
                transform-origin: bottom right;
            }
            &:hover::after {
                transform: scaleX(1);
                transform-origin: bottom left;
            }
            &.active {
                @apply font-bold;
                &::after {
                    @apply bg-white;
                    transform: scaleX(1);
                }
            }
        }
        
    }
}

$start-color-1: hsl(math.random(360), 70%, 60%);
$start-color-2: hsl(math.random(360), 70%, 60%);
$end-color-1: hsl(math.random(360), 70%, 60%);
$end-color-2: hsl(math.random(360), 70%, 60%);

@property --color1 {
  syntax: '<color>';
  inherits: false;
  initial-value: #{$start-color-1}; 
}
@property --color2 {
  syntax: '<color>';
  inherits: false;
  initial-value: #{$start-color-2}; 
}

@keyframes moveAndChangeColor {
  0%, 100% {
    --color1: #{$start-color-1};
    --color2: #{$start-color-2};
  }
  50% {
    --color1: #{$end-color-1};
    --color2: #{$end-color-2};
  }
}

.animated-gradient-bg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: #0f172a;
  background-image: radial-gradient(ellipse 80% 80% at 20% 40%, var(--color1), transparent),
                    radial-gradient(ellipse 80% 80% at 80% 50%, var(--color2), transparent);
}
#dot-wave-canvas {
    //display: none;
}
.animated-clouds {
    //@include backgrounds.background-image-webp('/resources/images/CLOUDS', 'png');
    //display: none;
    position: absolute;
    inset: 0;
    width: 200%; 
    height: 100%;
    //background-image: url('/resources/images/CLOUDS.png');
    background-size: 50% auto;
    background-repeat: repeat-x; 
    opacity: 0.2; 
    animation: pan-clouds 320s linear infinite;
    
}

@keyframes pan-clouds {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-50%); 
    }
}
  
@media only screen and (max-width: 600px) {
    .animated-clouds {
        background-size: 250% auto;
    }
    @keyframes pan-clouds {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-250%); 
        }
    }
}
